{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\who30\\\\Desktop\\\\Daelim_shop-master\\\\Daelim_shop-master\\\\client\\\\src\\\\SignPage2.js\";\nimport React, { useState, Component } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from './_actions/user_action';\nimport Axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport styled from \"styled-components\";\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  const [Email, setEmail] = useState(\"\");\n  const [Name, setName] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [ConfirmPassword, setConfirmPassword] = useState(\"\");\n\n  const onEmailHandler = event => {\n    setEmail(event.currentTarget.value);\n  };\n\n  const onNameHandler = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const onPasswordHandler = event => {\n    setPassword(event.currentTarget.value);\n  };\n\n  const onConfirmPasswordHandler = event => {\n    setConfirmPassword(event.currentTarget.value);\n  };\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n\n    if (Password !== ConfirmPassword) {\n      return alert('비밀번호와 비밀번호 확인은 같아야 합니다.');\n    }\n\n    let body = {\n      email: Email,\n      password: Password,\n      name: Name\n    };\n    dispatch(registerUser(body)).then(response => {\n      if (response.payload.success) {\n        props.history.push(\"/\");\n      } else {\n        alert(\"Failed to sign up\");\n      }\n    });\n  };\n\n  const Paging = [];\n  var i = 0;\n\n  for (i; i < 2; i++) {\n    if (i === 1) {\n      Paging.push( /*#__PURE__*/React.createElement(Oval, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      Paging.push( /*#__PURE__*/React.createElement(Circle, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SignDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SignBorder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PagingDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, Paging), /*#__PURE__*/React.createElement(Subtitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\\uC744 \\uC9C4\\uD589\\uD574\\uC8FC\\uC138\\uC694.\"), /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"STEP 02\"), /*#__PURE__*/React.createElement(P, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"*\\uB294 \\uD544\\uC218 \\uC815\\uBCF4\\uC774\\uBBC0\\uB85C \\uAF2D \\uC785\\uB825\\uD574\\uC8FC\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\"), /*#__PURE__*/React.createElement(InputDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NameInput, {\n    type: \"text\",\n    value: Name,\n    onChange: onNameHandler,\n    placeholder: \"*\\uC131\\uBA85\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(IdInput, {\n    type: \"email\",\n    value: Email,\n    onChange: onEmailHandler,\n    placeholder: \"*\\uC544\\uC774\\uB514\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(SubmitBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"\\uC544\\uC774\\uB514 \\uC911\\uBCF5 \\uCCB4\\uD06C\"), /*#__PURE__*/React.createElement(PwdInput, {\n    type: \"password\",\n    value: Password,\n    onChange: onPasswordHandler,\n    placeholder: \"*\\uBE44\\uBC00\\uBC88\\uD638\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(PwdInput, {\n    type: \"password\",\n    value: ConfirmPassword,\n    onChange: onConfirmPasswordHandler,\n    placeholder: \"*\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(EmailInput, {\n    placeholder: \"*\\uB300\\uB9BC\\uB300\\uD559\\uAD50 \\uC774\\uBA54\\uC77C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(EmailDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \"@email.daelim \"), /*#__PURE__*/React.createElement(SubmitBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"\\uC774\\uBA54\\uC77C \\uC778\\uC99D \\uC694\\uCCAD\"), /*#__PURE__*/React.createElement(PhoneCer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"\\uC778\\uC99D \\uC694\\uCCAD\")), /*#__PURE__*/React.createElement(NextBtn, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"\\uAC00\\uC785 \\uC644\\uB8CC\"))));\n}\n\nconst SignDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n\n  @media all and (min-width: 1024px) {\n    min-height: 900px;\n  }\n`;\nconst SignBorder = styled.div`\n  width: 800px;\n  height: 1100px;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);\n  border-radius: 50px;\n\n  @media all and (max-width: 1023px) {\n    border-radius: 0;\n    box-shadow: none;\n    height: 100vh;\n  }\n`;\nconst PagingDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 54px;\n  margin-bottom: 35px;\n\n  @media all and (max-width: 425px) {\n    margin-top: 35px;\n    margin-bottom: 70px;\n  }\n`;\nconst Oval = styled.div`\n  width: 40px;\n  height: 9px;\n  border-radius: 5px;\n  background: #0095c8;\n\n  @media all and (max-width: 425px) {\n    width: 28px;\n    height: 6px;\n  }\n`;\nconst Circle = styled.div`\n  width: 9px;\n  height: 9px;\n  border-radius: 50%;\n  background: #0095c8;\n  margin-left: 14px;\n  margin-right: 14px;\n  @media all and (max-width: 425px) {\n    width: 7px;\n    height: 6px;\n  }\n`;\nconst Subtitle = styled.p`\n  font-size: 30px;\n  color: #0095c8;\n  margin: 0;\n\n  @media all and (max-width: 425px) {\n    font-size: 18px;\n  }\n`;\nconst Step = styled(Subtitle.withComponent(\"p\"))`\n  font-size: 64px;\n  font-weight: bold;\n\n  @media all and (max-width: 425px) {\n    font-size: 38px;\n  }\n`;\nconst P = styled.p`\n  font-size: 14px;\n  margin-bottom: 36px;\n\n  @media all and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\nconst InputDiv = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n\n  @media all and (max-width: 425px) {\n    width: 270px;\n  }\n`;\nconst NameInput = styled.input.attrs({\n  type: \"text\"\n})`\n  width: 418px;\n  height: 21px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid #c2c2c2;\n  display :flex;\n  &:focus,\n  :hover {\n    outline: none;\n    border-color: #0095c8;\n  }\n\n  @media all and (max-width: 425px) {\n    width: 248px;\n    height: 8px;\n    font-size: 12px;\n    padding: 10px;\n    border-radius: 5px;\n  }\n`;\nconst IdInput = styled.input.attrs({\n  type: \"text\"\n})`\n  width: 250px;\n  height: 18px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid #c2c2c2;\n  margin-top: 15px;\n  margin-right : 0;\n  float : left;\n  \n\n  &:focus,\n  :hover {\n    outline: none;\n    border-color: #0095c8;\n  }\n\n  @media all and (max-width: 425px) {\n    width: 248px;\n    height: 8px;\n    font-size: 12px;\n    padding: 10px;\n    border-radius: 5px;\n  }\n`;\nconst SubmitBtn = styled.button`\n  width: 132px;\n  height: 50px;\n  border-radius: 10px;\n  border: none;\n  background: #C2C2C2;\n  float: right;\n  color: #fff;\n  margin-top: 15px;\n  font-size: 14px;\n  margin-left: 8px;\n  cursor: pointer;\n\n\n\n  @media all and (max-width: 425px) {\n    width: 110px;\n    height: 18px;\n    font-size: 12px;\n    margin-top: 5px;\n    margin-left: 0;\n    background: none;\n    color: #000;\n    float: left;\n  }\n`;\nconst PwdInput = styled.input.attrs({\n  type: \"password\"\n})`\n  width: 418px;\n  height: 21px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid #C2C2C2;\n  margin-top: 15px;\n  &:focus,\n  :hover {\n    outline: none;\n    border-color: #0095c8;\n  }\n\n  @media all and (max-width: 425px) {\n    width: 248px;\n    height: 8px;\n    font-size: 12px;\n    padding: 10px;\n    border-radius: 5px;\n  }\n`;\nconst EmailInput = styled.input.attrs({\n  type: \"text\"\n})`\n  width: 133px;\n  height: 18px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid #c2c2c2;\n  margin-top: 15px;\n\n  &:focus,\n  :hover {\n    outline: none;\n    border-color: #0095c8;\n  }\n\n  @media all and (max-width: 425px) {\n    width: 152px;\n    height: 8px;\n    font-size: 12px;\n    padding: 10px;\n    border-radius: 5px;\n    float: left;\n  }\n`;\nconst EmailDiv = styled.div`\n  width: 102px;\n  font-size: 14px;\n  display: inline-block;\n  -ms-user-select: none; \n  -moz-user-select: -moz-none; \n  -webkit-user-select: none; \n  -khtml-user-select: none; \n  user-select:none;\n  margin-left: 21.5px;\n  margin-right: 21.5px;\n\n  @media all and (max-width: 425px) {\n    width: 86px;\n    font-size: 12px;\n    margin: 0;\n    margin-top: 22px;\n  }\n`;\nconst PhoneCer = styled.button`\n  width: 450px;\n  height: 50px;\n  margin-top: 15px;\n  background-color: #c2c2c2;\n  color: #fff;\n  border: none;\n  font-size: 20px;\n  cursor: pointer;\n\n  @media all and (max-width: 425px) {\n    width: 270px;\n    height: 35px;\n  }\n`;\nconst NextBtn = styled.button`\n  width: 450px;\n  height: 50px;\n  margin-top: 15px;\n  background-color: #0095c8;\n  color: #fff;\n  border: none;\n  font-size: 20px;\n  cursor: pointer;\n  margin-bottom: 32px;\n\n  @media all and (max-width: 425px) {\n    width: 270px;\n    height: 35px;\n    margin-top: 5px;\n  }\n`;\nexport default withRouter(RegisterPage);","map":{"version":3,"sources":["C:/Users/who30/Desktop/Daelim_shop-master/Daelim_shop-master/client/src/SignPage2.js"],"names":["React","useState","Component","useDispatch","registerUser","Axios","withRouter","styled","RegisterPage","props","dispatch","Email","setEmail","Name","setName","Password","setPassword","ConfirmPassword","setConfirmPassword","onEmailHandler","event","currentTarget","value","onNameHandler","onPasswordHandler","onConfirmPasswordHandler","onSubmitHandler","preventDefault","alert","body","email","password","name","then","response","payload","success","history","push","Paging","i","SignDiv","div","SignBorder","PagingDiv","Oval","Circle","Subtitle","p","Step","withComponent","P","InputDiv","NameInput","input","attrs","type","IdInput","SubmitBtn","button","PwdInput","EmailInput","EmailDiv","PhoneCer","NextBtn"],"mappings":"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","sourcesContent":["import React, { useState,Component } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from './_actions/user_action';\nimport Axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nimport styled from \"styled-components\";\n\n\nfunction RegisterPage(props) {\n    const dispatch = useDispatch();\n\n    const [Email, setEmail] = useState(\"\")\n    const [Name, setName] = useState(\"\")\n    const [Password, setPassword] = useState(\"\")\n    const [ConfirmPassword, setConfirmPassword] = useState(\"\")\n\n\n    const onEmailHandler = (event) => {\n        setEmail(event.currentTarget.value)\n    }\n\n    const onNameHandler = (event) => {\n        setName(event.currentTarget.value)\n    }\n\n    const onPasswordHandler = (event) => {\n        setPassword(event.currentTarget.value)\n    }\n\n    const onConfirmPasswordHandler = (event) => {\n        setConfirmPassword(event.currentTarget.value)\n    }\n\n    const onSubmitHandler = (event) => {\n        event.preventDefault();\n\n        if (Password !== ConfirmPassword) {\n            return alert('비밀번호와 비밀번호 확인은 같아야 합니다.')\n        }\n\n        let body = {\n            email: Email,\n            password: Password,\n            name: Name\n        }\n        dispatch(registerUser(body))\n            .then(response => {\n                if (response.payload.success) {\n                    props.history.push(\"/\")\n                } else {\n                    alert(\"Failed to sign up\")\n                }\n            })\n    }\n\n    const Paging = [];\n    var i = 0;\n\n    for (i; i < 2; i++) {\n      if (i === 1) {\n        Paging.push(<Oval key={i} />);\n      } else {\n        Paging.push(<Circle key={i} />);\n      }\n    }\n\n\n\n    return (\n\n            <form onSubmit={onSubmitHandler}>\n                <SignDiv>\n                    <SignBorder>\n                        <PagingDiv>{Paging}</PagingDiv>\n                        <Subtitle>회원가입을 진행해주세요.</Subtitle>\n                        <Step>STEP 02</Step>\n                        <P>*는 필수 정보이므로 꼭 입력해주셔야 합니다.</P>\n                        <InputDiv>\n                            <NameInput type=\"text\" value={Name} onChange={onNameHandler} placeholder=\"*성명\" />\n                            <IdInput type=\"email\" value={Email} onChange={onEmailHandler} placeholder=\"*아이디\" />\n                            <SubmitBtn>아이디 중복 체크</SubmitBtn>\n                            <PwdInput type=\"password\" value={Password} onChange={onPasswordHandler} placeholder=\"*비밀번호\" />\n                            <PwdInput  type=\"password\" value={ConfirmPassword} onChange={onConfirmPasswordHandler} placeholder=\"*비밀번호 확인\" />\n                            <EmailInput placeholder=\"*대림대학교 이메일\" />\n                            <EmailDiv>@email.daelim </EmailDiv>\n                            <SubmitBtn>이메일 인증 요청</SubmitBtn>\n                            <PhoneCer>인증 요청</PhoneCer>\n                        </InputDiv>\n                        <NextBtn type=\"submit\">가입 완료</NextBtn>\n                    </SignBorder>\n                </SignDiv>\n\n            </form>\n    )\n}\n\n\nconst SignDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n\n  @media all and (min-width: 1024px) {\n    min-height: 900px;\n  }\n`;\n\nconst SignBorder = styled.div`\n  width: 800px;\n  height: 1100px;\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.25);\n  border-radius: 50px;\n\n  @media all and (max-width: 1023px) {\n    border-radius: 0;\n    box-shadow: none;\n    height: 100vh;\n  }\n`;\n\nconst PagingDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 54px;\n  margin-bottom: 35px;\n\n  @media all and (max-width: 425px) {\n    margin-top: 35px;\n    margin-bottom: 70px;\n  }\n`;\n\nconst Oval = styled.div`\n  width: 40px;\n  height: 9px;\n  border-radius: 5px;\n  background: #0095c8;\n\n  @media all and (max-width: 425px) {\n    width: 28px;\n    height: 6px;\n  }\n`;\nconst Circle = styled.div`\n  width: 9px;\n  height: 9px;\n  border-radius: 50%;\n  background: #0095c8;\n  margin-left: 14px;\n  margin-right: 14px;\n  @media all and (max-width: 425px) {\n    width: 7px;\n    height: 6px;\n  }\n`;\n\nconst Subtitle = styled.p`\n  font-size: 30px;\n  color: #0095c8;\n  margin: 0;\n\n  @media all and (max-width: 425px) {\n    font-size: 18px;\n  }\n`;\n\nconst Step = styled(Subtitle.withComponent(\"p\"))`\n  font-size: 64px;\n  font-weight: bold;\n\n  @media all and (max-width: 425px) {\n    font-size: 38px;\n  }\n`;\n\nconst P = styled.p`\n  font-size: 14px;\n  margin-bottom: 36px;\n\n  @media all and (max-width: 425px) {\n    font-size: 14px;\n  }\n`\n\nconst InputDiv = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n\n  @media all and (max-width: 425px) {\n    width: 270px;\n  }\n`;\n\nconst NameInput = styled.input.attrs({ type: \"text\" })`\n  width: 418px;\n  height: 21px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid #c2c2c2;\n  display :flex;\n  &:focus,\n  :hover {\n    outline: none;\n    border-color: #0095c8;\n  }\n\n  @media all and (max-width: 425px) {\n    width: 248px;\n    height: 8px;\n    font-size: 12px;\n    padding: 10px;\n    border-radius: 5px;\n  }\n`;\n\nconst IdInput = styled.input.attrs({ type: \"text\" })`\n  width: 250px;\n  height: 18px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid #c2c2c2;\n  margin-top: 15px;\n  margin-right : 0;\n  float : left;\n  \n\n  &:focus,\n  :hover {\n    outline: none;\n    border-color: #0095c8;\n  }\n\n  @media all and (max-width: 425px) {\n    width: 248px;\n    height: 8px;\n    font-size: 12px;\n    padding: 10px;\n    border-radius: 5px;\n  }\n`\n\nconst SubmitBtn = styled.button`\n  width: 132px;\n  height: 50px;\n  border-radius: 10px;\n  border: none;\n  background: #C2C2C2;\n  float: right;\n  color: #fff;\n  margin-top: 15px;\n  font-size: 14px;\n  margin-left: 8px;\n  cursor: pointer;\n\n\n\n  @media all and (max-width: 425px) {\n    width: 110px;\n    height: 18px;\n    font-size: 12px;\n    margin-top: 5px;\n    margin-left: 0;\n    background: none;\n    color: #000;\n    float: left;\n  }\n`\n\nconst PwdInput = styled.input.attrs({ type: \"password\" })`\n  width: 418px;\n  height: 21px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid #C2C2C2;\n  margin-top: 15px;\n  &:focus,\n  :hover {\n    outline: none;\n    border-color: #0095c8;\n  }\n\n  @media all and (max-width: 425px) {\n    width: 248px;\n    height: 8px;\n    font-size: 12px;\n    padding: 10px;\n    border-radius: 5px;\n  }\n`\n\nconst EmailInput = styled.input.attrs({ type: \"text\" })`\n  width: 133px;\n  height: 18px;\n  padding: 15px;\n  border-radius: 10px;\n  border: 1px solid #c2c2c2;\n  margin-top: 15px;\n\n  &:focus,\n  :hover {\n    outline: none;\n    border-color: #0095c8;\n  }\n\n  @media all and (max-width: 425px) {\n    width: 152px;\n    height: 8px;\n    font-size: 12px;\n    padding: 10px;\n    border-radius: 5px;\n    float: left;\n  }\n`\n\nconst EmailDiv = styled.div`\n  width: 102px;\n  font-size: 14px;\n  display: inline-block;\n  -ms-user-select: none; \n  -moz-user-select: -moz-none; \n  -webkit-user-select: none; \n  -khtml-user-select: none; \n  user-select:none;\n  margin-left: 21.5px;\n  margin-right: 21.5px;\n\n  @media all and (max-width: 425px) {\n    width: 86px;\n    font-size: 12px;\n    margin: 0;\n    margin-top: 22px;\n  }\n`\n\nconst PhoneCer = styled.button`\n  width: 450px;\n  height: 50px;\n  margin-top: 15px;\n  background-color: #c2c2c2;\n  color: #fff;\n  border: none;\n  font-size: 20px;\n  cursor: pointer;\n\n  @media all and (max-width: 425px) {\n    width: 270px;\n    height: 35px;\n  }\n`\n\nconst NextBtn = styled.button`\n  width: 450px;\n  height: 50px;\n  margin-top: 15px;\n  background-color: #0095c8;\n  color: #fff;\n  border: none;\n  font-size: 20px;\n  cursor: pointer;\n  margin-bottom: 32px;\n\n  @media all and (max-width: 425px) {\n    width: 270px;\n    height: 35px;\n    margin-top: 5px;\n  }\n`;\n\nexport default withRouter(RegisterPage)\n"]},"metadata":{},"sourceType":"module"}